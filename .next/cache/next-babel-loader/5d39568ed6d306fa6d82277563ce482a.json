{"ast":null,"code":"\"use strict\";\n\nvar _Object$setPrototypeOf = require(\"@babel/runtime-corejs2/core-js/object/set-prototype-of\");\nvar _Object$getPrototypeOf = require(\"@babel/runtime-corejs2/core-js/object/get-prototype-of\");\nvar _Object$create = require(\"@babel/runtime-corejs2/core-js/object/create\");\nvar _Symbol = require(\"@babel/runtime-corejs2/core-js/symbol\");\nvar _asyncToGenerator = require(\"@babel/runtime-corejs2/helpers/asyncToGenerator\");\nvar _slicedToArray = require(\"@babel/runtime-corejs2/helpers/slicedToArray\");\nvar _Promise = require(\"@babel/runtime-corejs2/core-js/promise\");\nvar _Object$assign = require(\"@babel/runtime-corejs2/core-js/object/assign\");\nvar _classCallCheck = require(\"@babel/runtime-corejs2/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime-corejs2/helpers/createClass\");\nvar _Object$defineProperty = require(\"@babel/runtime-corejs2/core-js/object/define-property\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = _Object$defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof _Symbol ? _Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return _Object$defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = _Object$create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = _Object$getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = _Object$create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return _Object$setPrototypeOf ? _Object$setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = _Object$create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = _Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar url_1 = require(\"url\");\nvar mitt_1 = __importDefault(require(\"../mitt\"));\nvar utils_1 = require(\"../utils\");\nvar rewrite_url_for_export_1 = require(\"./rewrite-url-for-export\");\nvar route_matcher_1 = require(\"./utils/route-matcher\");\nvar route_regex_1 = require(\"./utils/route-regex\");\nvar is_dynamic_1 = require(\"./utils/is-dynamic\");\nfunction toRoute(path) {\n  return path.replace(/\\/$/, '') || '/';\n}\nvar Router = /*#__PURE__*/function () {\n  function Router(pathname, query, as, _ref) {\n    var _this = this;\n    var initialProps = _ref.initialProps,\n      pageLoader = _ref.pageLoader,\n      App = _ref.App,\n      wrapApp = _ref.wrapApp,\n      Component = _ref.Component,\n      err = _ref.err,\n      subscription = _ref.subscription;\n    _classCallCheck(this, Router);\n    this.onPopState = function (e) {\n      if (!e.state) {\n        // We get state as undefined for two reasons.\n        //  1. With older safari (< 8) and older chrome (< 34)\n        //  2. When the URL changed with #\n        //\n        // In the both cases, we don't need to proceed and change the route.\n        // (as it's already changed)\n        // But we can simply replace the state with the new changes.\n        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n        // So, doing the following for (1) does no harm.\n        var _pathname = _this.pathname,\n          _query = _this.query;\n        _this.changeState('replaceState', utils_1.formatWithValidation({\n          pathname: _pathname,\n          query: _query\n        }), utils_1.getURL());\n        return;\n      }\n      // Make sure we don't re-render on initial load,\n      // can be caused by navigating back from an external site\n      if (e.state.options && e.state.options.fromExternal) {\n        return;\n      }\n      // If the downstream application returns falsy, return.\n      // They will then be responsible for handling the event.\n      if (_this._bps && !_this._bps(e.state)) {\n        return;\n      }\n      var _e$state = e.state,\n        url = _e$state.url,\n        as = _e$state.as,\n        options = _e$state.options;\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof url === 'undefined' || typeof as === 'undefined') {\n          console.warn('`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/zeit/next.js/popstate-state-empty');\n        }\n      }\n      _this.replace(url, as, options);\n    };\n    // represents the current component key\n    this.route = toRoute(pathname);\n    // set up the component cache (by route keys)\n    this.components = {};\n    // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n    if (pathname !== '/_error') {\n      this.components[this.route] = {\n        Component: Component,\n        props: initialProps,\n        err: err\n      };\n    }\n    this.components['/_app'] = {\n      Component: App\n    };\n    // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n    // @ts-ignore backwards compatibility\n    this.events = Router.events;\n    this.pageLoader = pageLoader;\n    this.pathname = pathname;\n    this.query = query;\n    // if auto prerendered and dynamic route wait to update asPath\n    // until after mount to prevent hydration mismatch\n    this.asPath =\n    // @ts-ignore this is temporarily global (attached to window)\n    is_dynamic_1.isDynamicRoute(pathname) && __NEXT_DATA__.nextExport ? pathname : as;\n    this.sub = subscription;\n    this.clc = null;\n    this._wrapApp = wrapApp;\n    if (true) {\n      // in order for `e.state` to work on the `onpopstate` event\n      // we have to register the initial route upon initialization\n      this.changeState('replaceState', utils_1.formatWithValidation({\n        pathname: pathname,\n        query: query\n      }), as);\n      window.addEventListener('popstate', this.onPopState);\n      window.addEventListener('unload', function () {\n        // Workaround for popstate firing on initial page load when\n        // navigating back from an external site\n        if (history.state) {\n          var _history$state = history.state,\n            url = _history$state.url,\n            _as2 = _history$state.as,\n            options = _history$state.options;\n          _this.changeState('replaceState', url, _as2, _Object$assign({}, options, {\n            fromExternal: true\n          }));\n        }\n      });\n    }\n  }\n  // @deprecated backwards compatibility even though it's a private method.\n  _createClass(Router, [{\n    key: \"update\",\n    value: function update(route, mod) {\n      var Component = mod[\"default\"] || mod;\n      var data = this.components[route];\n      if (!data) {\n        throw new Error(\"Cannot update unavailable route: \".concat(route));\n      }\n      var newData = _Object$assign({}, data, {\n        Component: Component\n      });\n      this.components[route] = newData;\n      // pages/_app.js updated\n      if (route === '/_app') {\n        this.notify(this.components[this.route]);\n        return;\n      }\n      if (route === this.route) {\n        this.notify(newData);\n      }\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      window.location.reload();\n    }\n    /**\n     * Go back in history\n     */\n  }, {\n    key: \"back\",\n    value: function back() {\n      window.history.back();\n    }\n    /**\n     * Performs a `pushState` with arguments\n     * @param url of the route\n     * @param as masks `url` for the browser\n     * @param options object you can define `shallow` and other options\n     */\n  }, {\n    key: \"push\",\n    value: function push(url) {\n      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.change('pushState', url, as, options);\n    }\n    /**\n     * Performs a `replaceState` with arguments\n     * @param url of the route\n     * @param as masks `url` for the browser\n     * @param options object you can define `shallow` and other options\n     */\n  }, {\n    key: \"replace\",\n    value: function replace(url) {\n      var as = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : url;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.change('replaceState', url, as, options);\n    }\n  }, {\n    key: \"change\",\n    value: function change(method, _url, _as, options) {\n      var _this2 = this;\n      return new _Promise(function (resolve, reject) {\n        // marking route changes as a navigation start entry\n        if (utils_1.SUPPORTS_PERFORMANCE_USER_TIMING) {\n          performance.mark('routeChange');\n        }\n        // If url and as provided as an object representation,\n        // we'll format them into the string version here.\n        var url = typeof _url === 'object' ? utils_1.formatWithValidation(_url) : _url;\n        var as = typeof _as === 'object' ? utils_1.formatWithValidation(_as) : _as;\n        // Add the ending slash to the paths. So, we can serve the\n        // \"<page>/index.html\" directly for the SSR page.\n        if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n          // @ts-ignore this is temporarily global (attached to window)\n          if (__NEXT_DATA__.nextExport) {\n            as = rewrite_url_for_export_1.rewriteUrlForNextExport(as);\n          }\n        }\n        _this2.abortComponentLoad(as);\n        // If the url change is only related to a hash change\n        // We should not proceed. We should only change the state.\n        // WARNING: `_h` is an internal option for handing Next.js client-side\n        // hydration. Your app should _never_ use this property. It may change at\n        // any time without notice.\n        if (!options._h && _this2.onlyAHashChange(as)) {\n          _this2.asPath = as;\n          Router.events.emit('hashChangeStart', as);\n          _this2.changeState(method, url, as);\n          _this2.scrollToHash(as);\n          Router.events.emit('hashChangeComplete', as);\n          return resolve(true);\n        }\n        var _url_1$parse = url_1.parse(url, true),\n          pathname = _url_1$parse.pathname,\n          query = _url_1$parse.query,\n          protocol = _url_1$parse.protocol;\n        if (!pathname || protocol) {\n          if (process.env.NODE_ENV !== 'production') {\n            throw new Error(\"Invalid href passed to router: \".concat(url, \" https://err.sh/zeit/next.js/invalid-href-passed\"));\n          }\n          return resolve(false);\n        }\n        // If asked to change the current URL we should reload the current page\n        // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n        // We also need to set the method = replaceState always\n        // as this should not go into the history (That's how browsers work)\n        // We should compare the new asPath to the current asPath, not the url\n        if (!_this2.urlIsNew(as)) {\n          method = 'replaceState';\n        }\n        // @ts-ignore pathname is always a string\n        var route = toRoute(pathname);\n        var _options$shallow = options.shallow,\n          shallow = _options$shallow === void 0 ? false : _options$shallow;\n        if (is_dynamic_1.isDynamicRoute(route)) {\n          var _url_1$parse2 = url_1.parse(as),\n            asPathname = _url_1$parse2.pathname;\n          var rr = route_regex_1.getRouteRegex(route);\n          var routeMatch = route_matcher_1.getRouteMatcher(rr)(asPathname);\n          if (!routeMatch) {\n            console.error('The provided `as` value is incompatible with the `href` value. This is invalid. https://err.sh/zeit/next.js/incompatible-href-as');\n            return resolve(false);\n          }\n          // Merge params into `query`, overwriting any specified in search\n          _Object$assign(query, routeMatch);\n        }\n        Router.events.emit('routeChangeStart', as);\n        // If shallow is true and the route exists in the router cache we reuse the previous result\n        // @ts-ignore pathname is always a string\n        _this2.getRouteInfo(route, pathname, query, as, shallow).then(function (routeInfo) {\n          var error = routeInfo.error;\n          if (error && error.cancelled) {\n            return resolve(false);\n          }\n          Router.events.emit('beforeHistoryChange', as);\n          _this2.changeState(method, url, as, options);\n          var hash = window.location.hash.substring(1);\n          if (process.env.NODE_ENV !== 'production') {\n            var appComp = _this2.components['/_app'].Component;\n            window.next.isPrerendered = appComp.getInitialProps === appComp.origGetInitialProps && !routeInfo.Component.getInitialProps;\n          }\n          // @ts-ignore pathname is always defined\n          _this2.set(route, pathname, query, as, _Object$assign({}, routeInfo, {\n            hash: hash\n          }));\n          if (error) {\n            Router.events.emit('routeChangeError', error, as);\n            throw error;\n          }\n          Router.events.emit('routeChangeComplete', as);\n          return resolve(true);\n        }, reject);\n      });\n    }\n  }, {\n    key: \"changeState\",\n    value: function changeState(method, url, as) {\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof window.history === 'undefined') {\n          console.error(\"Warning: window.history is not available.\");\n          return;\n        }\n        // @ts-ignore method should always exist on history\n        if (typeof window.history[method] === 'undefined') {\n          console.error(\"Warning: window.history.\".concat(method, \" is not available\"));\n          return;\n        }\n      }\n      if (method !== 'pushState' || utils_1.getURL() !== as) {\n        // @ts-ignore method should always exist on history\n        window.history[method]({\n          url: url,\n          as: as,\n          options: options\n        }, null, as);\n      }\n    }\n  }, {\n    key: \"getRouteInfo\",\n    value: function getRouteInfo(route, pathname, query, as) {\n      var _this3 = this;\n      var shallow = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var cachedRouteInfo = this.components[route];\n      // If there is a shallow route transition possible\n      // If the route is already rendered on the screen.\n      if (shallow && cachedRouteInfo && this.route === route) {\n        return _Promise.resolve(cachedRouteInfo);\n      }\n      return new _Promise(function (resolve, reject) {\n        if (cachedRouteInfo) {\n          return resolve(cachedRouteInfo);\n        }\n        _this3.fetchComponent(route).then(function (Component) {\n          return resolve({\n            Component: Component\n          });\n        }, reject);\n      }).then(function (routeInfo) {\n        var Component = routeInfo.Component;\n        if (process.env.NODE_ENV !== 'production') {\n          var _require = require('react-is'),\n            isValidElementType = _require.isValidElementType;\n          if (!isValidElementType(Component)) {\n            throw new Error(\"The default export is not a React Component in page: \\\"\".concat(pathname, \"\\\"\"));\n          }\n        }\n        return new _Promise(function (resolve, reject) {\n          // we provide AppTree later so this needs to be `any`\n          _this3.getInitialProps(Component, {\n            pathname: pathname,\n            query: query,\n            asPath: as\n          }).then(function (props) {\n            routeInfo.props = props;\n            _this3.components[route] = routeInfo;\n            resolve(routeInfo);\n          }, reject);\n        });\n      })[\"catch\"](function (err) {\n        return new _Promise(function (resolve) {\n          if (err.code === 'PAGE_LOAD_ERROR') {\n            // If we can't load the page it could be one of following reasons\n            //  1. Page doesn't exists\n            //  2. Page does exist in a different zone\n            //  3. Internal error while loading the page\n            // So, doing a hard reload is the proper way to deal with this.\n            window.location.href = as;\n            // Changing the URL doesn't block executing the current code path.\n            // So, we need to mark it as a cancelled error and stop the routing logic.\n            err.cancelled = true;\n            // @ts-ignore TODO: fix the control flow here\n            return resolve({\n              error: err\n            });\n          }\n          if (err.cancelled) {\n            // @ts-ignore TODO: fix the control flow here\n            return resolve({\n              error: err\n            });\n          }\n          resolve(_this3.fetchComponent('/_error').then(function (Component) {\n            var routeInfo = {\n              Component: Component,\n              err: err\n            };\n            return new _Promise(function (resolve) {\n              _this3.getInitialProps(Component, {\n                err: err,\n                pathname: pathname,\n                query: query\n              }).then(function (props) {\n                routeInfo.props = props;\n                routeInfo.error = err;\n                resolve(routeInfo);\n              }, function (gipErr) {\n                console.error('Error in error page `getInitialProps`: ', gipErr);\n                routeInfo.error = err;\n                routeInfo.props = {};\n                resolve(routeInfo);\n              });\n            });\n          }));\n        });\n      });\n    }\n  }, {\n    key: \"set\",\n    value: function set(route, pathname, query, as, data) {\n      this.route = route;\n      this.pathname = pathname;\n      this.query = query;\n      this.asPath = as;\n      this.notify(data);\n    }\n    /**\n     * Callback to execute before replacing router state\n     * @param cb callback to be executed\n     */\n  }, {\n    key: \"beforePopState\",\n    value: function beforePopState(cb) {\n      this._bps = cb;\n    }\n  }, {\n    key: \"onlyAHashChange\",\n    value: function onlyAHashChange(as) {\n      if (!this.asPath) return false;\n      var _this$asPath$split = this.asPath.split('#'),\n        _this$asPath$split2 = _slicedToArray(_this$asPath$split, 2),\n        oldUrlNoHash = _this$asPath$split2[0],\n        oldHash = _this$asPath$split2[1];\n      var _as$split = as.split('#'),\n        _as$split2 = _slicedToArray(_as$split, 2),\n        newUrlNoHash = _as$split2[0],\n        newHash = _as$split2[1];\n      // Makes sure we scroll to the provided hash if the url/hash are the same\n      if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n        return true;\n      }\n      // If the urls are change, there's more than a hash change\n      if (oldUrlNoHash !== newUrlNoHash) {\n        return false;\n      }\n      // If the hash has changed, then it's a hash only change.\n      // This check is necessary to handle both the enter and\n      // leave hash === '' cases. The identity case falls through\n      // and is treated as a next reload.\n      return oldHash !== newHash;\n    }\n  }, {\n    key: \"scrollToHash\",\n    value: function scrollToHash(as) {\n      var _as$split3 = as.split('#'),\n        _as$split4 = _slicedToArray(_as$split3, 2),\n        hash = _as$split4[1];\n      // Scroll to top if the hash is just `#` with no value\n      if (hash === '') {\n        window.scrollTo(0, 0);\n        return;\n      }\n      // First we check if the element by id is found\n      var idEl = document.getElementById(hash);\n      if (idEl) {\n        idEl.scrollIntoView();\n        return;\n      }\n      // If there's no element with the id, we check the `name` property\n      // To mirror browsers\n      var nameEl = document.getElementsByName(hash)[0];\n      if (nameEl) {\n        nameEl.scrollIntoView();\n      }\n    }\n  }, {\n    key: \"urlIsNew\",\n    value: function urlIsNew(asPath) {\n      return this.asPath !== asPath;\n    }\n    /**\n     * Prefetch `page` code, you may wait for the data during `page` rendering.\n     * This feature only works in production!\n     * @param url of prefetched `page`\n     */\n  }, {\n    key: \"prefetch\",\n    value: function prefetch(url) {\n      var _this4 = this;\n      return new _Promise(function (resolve, reject) {\n        var _url_1$parse3 = url_1.parse(url),\n          pathname = _url_1$parse3.pathname,\n          protocol = _url_1$parse3.protocol;\n        if (!pathname || protocol) {\n          if (process.env.NODE_ENV !== 'production') {\n            throw new Error(\"Invalid href passed to router: \".concat(url, \" https://err.sh/zeit/next.js/invalid-href-passed\"));\n          }\n          return;\n        }\n        // Prefetch is not supported in development mode because it would trigger on-demand-entries\n        if (process.env.NODE_ENV !== 'production') return;\n        // @ts-ignore pathname is always defined\n        var route = toRoute(pathname);\n        _this4.pageLoader.prefetch(route).then(resolve, reject);\n      });\n    }\n  }, {\n    key: \"fetchComponent\",\n    value: function () {\n      var _fetchComponent = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(route) {\n        var cancelled, cancel, Component, error;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              cancelled = false;\n              cancel = this.clc = function () {\n                cancelled = true;\n              };\n              _context.next = 4;\n              return this.pageLoader.loadPage(route);\n            case 4:\n              Component = _context.sent;\n              if (!cancelled) {\n                _context.next = 9;\n                break;\n              }\n              error = new Error(\"Abort fetching component for route: \\\"\".concat(route, \"\\\"\"));\n              error.cancelled = true;\n              throw error;\n            case 9:\n              if (cancel === this.clc) {\n                this.clc = null;\n              }\n              return _context.abrupt(\"return\", Component);\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function fetchComponent(_x) {\n        return _fetchComponent.apply(this, arguments);\n      }\n      return fetchComponent;\n    }()\n  }, {\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(Component, ctx) {\n        var cancelled, cancel, App, props, status, _url_1$parse4, pathname, AppTree, err;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              cancelled = false;\n              cancel = function cancel() {\n                cancelled = true;\n              };\n              this.clc = cancel;\n              App = this.components['/_app'].Component;\n              if (!(\n              // @ts-ignore workaround for dead-code elimination\n              (self.__HAS_SPR || process.env.NODE_ENV !== 'production') && Component.__NEXT_SPR)) {\n                _context2.next = 11;\n                break;\n              }\n              _url_1$parse4 = url_1.parse(ctx.asPath || ctx.pathname), pathname = _url_1$parse4.pathname;\n              _context2.next = 8;\n              return fetch(\"/_next/data\".concat(pathname, \".json\")).then(function (res) {\n                if (!res.ok) {\n                  status = res.status;\n                  throw new Error('failed to load prerender data');\n                }\n                return res.json();\n              })[\"catch\"](function (err) {\n                console.error(\"Failed to load data\", status, err);\n                window.location.href = pathname;\n                return new _Promise(function () {});\n              });\n            case 8:\n              props = _context2.sent;\n              _context2.next = 16;\n              break;\n            case 11:\n              AppTree = this._wrapApp(App);\n              ctx.AppTree = AppTree;\n              _context2.next = 15;\n              return utils_1.loadGetInitialProps(App, {\n                AppTree: AppTree,\n                Component: Component,\n                router: this,\n                ctx: ctx\n              });\n            case 15:\n              props = _context2.sent;\n            case 16:\n              if (cancel === this.clc) {\n                this.clc = null;\n              }\n              if (!cancelled) {\n                _context2.next = 21;\n                break;\n              }\n              err = new Error('Loading initial props cancelled');\n              err.cancelled = true;\n              throw err;\n            case 21:\n              return _context2.abrupt(\"return\", props);\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function getInitialProps(_x2, _x3) {\n        return _getInitialProps.apply(this, arguments);\n      }\n      return getInitialProps;\n    }()\n  }, {\n    key: \"abortComponentLoad\",\n    value: function abortComponentLoad(as) {\n      if (this.clc) {\n        var e = new Error('Route Cancelled');\n        e.cancelled = true;\n        Router.events.emit('routeChangeError', e, as);\n        this.clc();\n        this.clc = null;\n      }\n    }\n  }, {\n    key: \"notify\",\n    value: function notify(data) {\n      this.sub(data, this.components['/_app'].Component);\n    }\n  }], [{\n    key: \"_rewriteUrlForNextExport\",\n    value: function _rewriteUrlForNextExport(url) {\n      return rewrite_url_for_export_1.rewriteUrlForNextExport(url);\n    }\n  }]);\n  return Router;\n}();\nRouter.events = mitt_1[\"default\"]();\nexports[\"default\"] = Router;","map":{"version":3,"names":["__importDefault","mod","__esModule","exports","value","url_1","require","mitt_1","utils_1","rewrite_url_for_export_1","route_matcher_1","route_regex_1","is_dynamic_1","toRoute","path","replace","Router","pathname","query","as","initialProps","pageLoader","App","wrapApp","Component","err","subscription","onPopState","e","state","changeState","formatWithValidation","getURL","options","fromExternal","_bps","url","process","env","NODE_ENV","console","warn","route","components","props","events","asPath","isDynamicRoute","__NEXT_DATA__","nextExport","sub","clc","_wrapApp","window","addEventListener","history","data","Error","newData","notify","location","reload","back","change","method","_url","_as","resolve","reject","SUPPORTS_PERFORMANCE_USER_TIMING","performance","mark","__NEXT_EXPORT_TRAILING_SLASH","rewriteUrlForNextExport","abortComponentLoad","_h","onlyAHashChange","emit","scrollToHash","parse","protocol","urlIsNew","shallow","asPathname","rr","getRouteRegex","routeMatch","getRouteMatcher","error","getRouteInfo","then","routeInfo","cancelled","hash","substring","appComp","next","isPrerendered","getInitialProps","origGetInitialProps","set","cachedRouteInfo","fetchComponent","isValidElementType","code","href","gipErr","cb","split","oldUrlNoHash","oldHash","newUrlNoHash","newHash","scrollTo","idEl","document","getElementById","scrollIntoView","nameEl","getElementsByName","prefetch","cancel","loadPage","ctx","self","__HAS_SPR","__NEXT_SPR","fetch","res","ok","status","json","AppTree","loadGetInitialProps","router"],"sources":["/Users/os333k/Desktop/innovation-2022/e2eRunner/node_modules/next/dist/next-server/lib/router/router.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst url_1 = require(\"url\");\nconst mitt_1 = __importDefault(require(\"../mitt\"));\nconst utils_1 = require(\"../utils\");\nconst rewrite_url_for_export_1 = require(\"./rewrite-url-for-export\");\nconst route_matcher_1 = require(\"./utils/route-matcher\");\nconst route_regex_1 = require(\"./utils/route-regex\");\nconst is_dynamic_1 = require(\"./utils/is-dynamic\");\nfunction toRoute(path) {\n    return path.replace(/\\/$/, '') || '/';\n}\nclass Router {\n    constructor(pathname, query, as, { initialProps, pageLoader, App, wrapApp, Component, err, subscription, }) {\n        this.onPopState = (e) => {\n            if (!e.state) {\n                // We get state as undefined for two reasons.\n                //  1. With older safari (< 8) and older chrome (< 34)\n                //  2. When the URL changed with #\n                //\n                // In the both cases, we don't need to proceed and change the route.\n                // (as it's already changed)\n                // But we can simply replace the state with the new changes.\n                // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n                // So, doing the following for (1) does no harm.\n                const { pathname, query } = this;\n                this.changeState('replaceState', utils_1.formatWithValidation({ pathname, query }), utils_1.getURL());\n                return;\n            }\n            // Make sure we don't re-render on initial load,\n            // can be caused by navigating back from an external site\n            if (e.state.options && e.state.options.fromExternal) {\n                return;\n            }\n            // If the downstream application returns falsy, return.\n            // They will then be responsible for handling the event.\n            if (this._bps && !this._bps(e.state)) {\n                return;\n            }\n            const { url, as, options } = e.state;\n            if (process.env.NODE_ENV !== 'production') {\n                if (typeof url === 'undefined' || typeof as === 'undefined') {\n                    console.warn('`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/zeit/next.js/popstate-state-empty');\n                }\n            }\n            this.replace(url, as, options);\n        };\n        // represents the current component key\n        this.route = toRoute(pathname);\n        // set up the component cache (by route keys)\n        this.components = {};\n        // We should not keep the cache, if there's an error\n        // Otherwise, this cause issues when when going back and\n        // come again to the errored page.\n        if (pathname !== '/_error') {\n            this.components[this.route] = { Component, props: initialProps, err };\n        }\n        this.components['/_app'] = { Component: App };\n        // Backwards compat for Router.router.events\n        // TODO: Should be remove the following major version as it was never documented\n        // @ts-ignore backwards compatibility\n        this.events = Router.events;\n        this.pageLoader = pageLoader;\n        this.pathname = pathname;\n        this.query = query;\n        // if auto prerendered and dynamic route wait to update asPath\n        // until after mount to prevent hydration mismatch\n        this.asPath =\n            // @ts-ignore this is temporarily global (attached to window)\n            is_dynamic_1.isDynamicRoute(pathname) && __NEXT_DATA__.nextExport ? pathname : as;\n        this.sub = subscription;\n        this.clc = null;\n        this._wrapApp = wrapApp;\n        if (typeof window !== 'undefined') {\n            // in order for `e.state` to work on the `onpopstate` event\n            // we have to register the initial route upon initialization\n            this.changeState('replaceState', utils_1.formatWithValidation({ pathname, query }), as);\n            window.addEventListener('popstate', this.onPopState);\n            window.addEventListener('unload', () => {\n                // Workaround for popstate firing on initial page load when\n                // navigating back from an external site\n                if (history.state) {\n                    const { url, as, options } = history.state;\n                    this.changeState('replaceState', url, as, Object.assign({}, options, { fromExternal: true }));\n                }\n            });\n        }\n    }\n    // @deprecated backwards compatibility even though it's a private method.\n    static _rewriteUrlForNextExport(url) {\n        return rewrite_url_for_export_1.rewriteUrlForNextExport(url);\n    }\n    update(route, mod) {\n        const Component = mod.default || mod;\n        const data = this.components[route];\n        if (!data) {\n            throw new Error(`Cannot update unavailable route: ${route}`);\n        }\n        const newData = Object.assign({}, data, { Component });\n        this.components[route] = newData;\n        // pages/_app.js updated\n        if (route === '/_app') {\n            this.notify(this.components[this.route]);\n            return;\n        }\n        if (route === this.route) {\n            this.notify(newData);\n        }\n    }\n    reload() {\n        window.location.reload();\n    }\n    /**\n     * Go back in history\n     */\n    back() {\n        window.history.back();\n    }\n    /**\n     * Performs a `pushState` with arguments\n     * @param url of the route\n     * @param as masks `url` for the browser\n     * @param options object you can define `shallow` and other options\n     */\n    push(url, as = url, options = {}) {\n        return this.change('pushState', url, as, options);\n    }\n    /**\n     * Performs a `replaceState` with arguments\n     * @param url of the route\n     * @param as masks `url` for the browser\n     * @param options object you can define `shallow` and other options\n     */\n    replace(url, as = url, options = {}) {\n        return this.change('replaceState', url, as, options);\n    }\n    change(method, _url, _as, options) {\n        return new Promise((resolve, reject) => {\n            // marking route changes as a navigation start entry\n            if (utils_1.SUPPORTS_PERFORMANCE_USER_TIMING) {\n                performance.mark('routeChange');\n            }\n            // If url and as provided as an object representation,\n            // we'll format them into the string version here.\n            const url = typeof _url === 'object' ? utils_1.formatWithValidation(_url) : _url;\n            let as = typeof _as === 'object' ? utils_1.formatWithValidation(_as) : _as;\n            // Add the ending slash to the paths. So, we can serve the\n            // \"<page>/index.html\" directly for the SSR page.\n            if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n                // @ts-ignore this is temporarily global (attached to window)\n                if (__NEXT_DATA__.nextExport) {\n                    as = rewrite_url_for_export_1.rewriteUrlForNextExport(as);\n                }\n            }\n            this.abortComponentLoad(as);\n            // If the url change is only related to a hash change\n            // We should not proceed. We should only change the state.\n            // WARNING: `_h` is an internal option for handing Next.js client-side\n            // hydration. Your app should _never_ use this property. It may change at\n            // any time without notice.\n            if (!options._h && this.onlyAHashChange(as)) {\n                this.asPath = as;\n                Router.events.emit('hashChangeStart', as);\n                this.changeState(method, url, as);\n                this.scrollToHash(as);\n                Router.events.emit('hashChangeComplete', as);\n                return resolve(true);\n            }\n            const { pathname, query, protocol } = url_1.parse(url, true);\n            if (!pathname || protocol) {\n                if (process.env.NODE_ENV !== 'production') {\n                    throw new Error(`Invalid href passed to router: ${url} https://err.sh/zeit/next.js/invalid-href-passed`);\n                }\n                return resolve(false);\n            }\n            // If asked to change the current URL we should reload the current page\n            // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n            // We also need to set the method = replaceState always\n            // as this should not go into the history (That's how browsers work)\n            // We should compare the new asPath to the current asPath, not the url\n            if (!this.urlIsNew(as)) {\n                method = 'replaceState';\n            }\n            // @ts-ignore pathname is always a string\n            const route = toRoute(pathname);\n            const { shallow = false } = options;\n            if (is_dynamic_1.isDynamicRoute(route)) {\n                const { pathname: asPathname } = url_1.parse(as);\n                const rr = route_regex_1.getRouteRegex(route);\n                const routeMatch = route_matcher_1.getRouteMatcher(rr)(asPathname);\n                if (!routeMatch) {\n                    console.error('The provided `as` value is incompatible with the `href` value. This is invalid. https://err.sh/zeit/next.js/incompatible-href-as');\n                    return resolve(false);\n                }\n                // Merge params into `query`, overwriting any specified in search\n                Object.assign(query, routeMatch);\n            }\n            Router.events.emit('routeChangeStart', as);\n            // If shallow is true and the route exists in the router cache we reuse the previous result\n            // @ts-ignore pathname is always a string\n            this.getRouteInfo(route, pathname, query, as, shallow).then(routeInfo => {\n                const { error } = routeInfo;\n                if (error && error.cancelled) {\n                    return resolve(false);\n                }\n                Router.events.emit('beforeHistoryChange', as);\n                this.changeState(method, url, as, options);\n                const hash = window.location.hash.substring(1);\n                if (process.env.NODE_ENV !== 'production') {\n                    const appComp = this.components['/_app'].Component;\n                    window.next.isPrerendered =\n                        appComp.getInitialProps === appComp.origGetInitialProps &&\n                            !routeInfo.Component.getInitialProps;\n                }\n                // @ts-ignore pathname is always defined\n                this.set(route, pathname, query, as, Object.assign({}, routeInfo, { hash }));\n                if (error) {\n                    Router.events.emit('routeChangeError', error, as);\n                    throw error;\n                }\n                Router.events.emit('routeChangeComplete', as);\n                return resolve(true);\n            }, reject);\n        });\n    }\n    changeState(method, url, as, options = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (typeof window.history === 'undefined') {\n                console.error(`Warning: window.history is not available.`);\n                return;\n            }\n            // @ts-ignore method should always exist on history\n            if (typeof window.history[method] === 'undefined') {\n                console.error(`Warning: window.history.${method} is not available`);\n                return;\n            }\n        }\n        if (method !== 'pushState' || utils_1.getURL() !== as) {\n            // @ts-ignore method should always exist on history\n            window.history[method]({ url, as, options }, null, as);\n        }\n    }\n    getRouteInfo(route, pathname, query, as, shallow = false) {\n        const cachedRouteInfo = this.components[route];\n        // If there is a shallow route transition possible\n        // If the route is already rendered on the screen.\n        if (shallow && cachedRouteInfo && this.route === route) {\n            return Promise.resolve(cachedRouteInfo);\n        }\n        return new Promise((resolve, reject) => {\n            if (cachedRouteInfo) {\n                return resolve(cachedRouteInfo);\n            }\n            this.fetchComponent(route).then(Component => resolve({ Component }), reject);\n        })\n            .then((routeInfo) => {\n            const { Component } = routeInfo;\n            if (process.env.NODE_ENV !== 'production') {\n                const { isValidElementType } = require('react-is');\n                if (!isValidElementType(Component)) {\n                    throw new Error(`The default export is not a React Component in page: \"${pathname}\"`);\n                }\n            }\n            return new Promise((resolve, reject) => {\n                // we provide AppTree later so this needs to be `any`\n                this.getInitialProps(Component, {\n                    pathname,\n                    query,\n                    asPath: as,\n                }).then(props => {\n                    routeInfo.props = props;\n                    this.components[route] = routeInfo;\n                    resolve(routeInfo);\n                }, reject);\n            });\n        })\n            .catch(err => {\n            return new Promise(resolve => {\n                if (err.code === 'PAGE_LOAD_ERROR') {\n                    // If we can't load the page it could be one of following reasons\n                    //  1. Page doesn't exists\n                    //  2. Page does exist in a different zone\n                    //  3. Internal error while loading the page\n                    // So, doing a hard reload is the proper way to deal with this.\n                    window.location.href = as;\n                    // Changing the URL doesn't block executing the current code path.\n                    // So, we need to mark it as a cancelled error and stop the routing logic.\n                    err.cancelled = true;\n                    // @ts-ignore TODO: fix the control flow here\n                    return resolve({ error: err });\n                }\n                if (err.cancelled) {\n                    // @ts-ignore TODO: fix the control flow here\n                    return resolve({ error: err });\n                }\n                resolve(this.fetchComponent('/_error').then(Component => {\n                    const routeInfo = { Component, err };\n                    return new Promise(resolve => {\n                        this.getInitialProps(Component, {\n                            err,\n                            pathname,\n                            query,\n                        }).then(props => {\n                            routeInfo.props = props;\n                            routeInfo.error = err;\n                            resolve(routeInfo);\n                        }, gipErr => {\n                            console.error('Error in error page `getInitialProps`: ', gipErr);\n                            routeInfo.error = err;\n                            routeInfo.props = {};\n                            resolve(routeInfo);\n                        });\n                    });\n                }));\n            });\n        });\n    }\n    set(route, pathname, query, as, data) {\n        this.route = route;\n        this.pathname = pathname;\n        this.query = query;\n        this.asPath = as;\n        this.notify(data);\n    }\n    /**\n     * Callback to execute before replacing router state\n     * @param cb callback to be executed\n     */\n    beforePopState(cb) {\n        this._bps = cb;\n    }\n    onlyAHashChange(as) {\n        if (!this.asPath)\n            return false;\n        const [oldUrlNoHash, oldHash] = this.asPath.split('#');\n        const [newUrlNoHash, newHash] = as.split('#');\n        // Makes sure we scroll to the provided hash if the url/hash are the same\n        if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n            return true;\n        }\n        // If the urls are change, there's more than a hash change\n        if (oldUrlNoHash !== newUrlNoHash) {\n            return false;\n        }\n        // If the hash has changed, then it's a hash only change.\n        // This check is necessary to handle both the enter and\n        // leave hash === '' cases. The identity case falls through\n        // and is treated as a next reload.\n        return oldHash !== newHash;\n    }\n    scrollToHash(as) {\n        const [, hash] = as.split('#');\n        // Scroll to top if the hash is just `#` with no value\n        if (hash === '') {\n            window.scrollTo(0, 0);\n            return;\n        }\n        // First we check if the element by id is found\n        const idEl = document.getElementById(hash);\n        if (idEl) {\n            idEl.scrollIntoView();\n            return;\n        }\n        // If there's no element with the id, we check the `name` property\n        // To mirror browsers\n        const nameEl = document.getElementsByName(hash)[0];\n        if (nameEl) {\n            nameEl.scrollIntoView();\n        }\n    }\n    urlIsNew(asPath) {\n        return this.asPath !== asPath;\n    }\n    /**\n     * Prefetch `page` code, you may wait for the data during `page` rendering.\n     * This feature only works in production!\n     * @param url of prefetched `page`\n     */\n    prefetch(url) {\n        return new Promise((resolve, reject) => {\n            const { pathname, protocol } = url_1.parse(url);\n            if (!pathname || protocol) {\n                if (process.env.NODE_ENV !== 'production') {\n                    throw new Error(`Invalid href passed to router: ${url} https://err.sh/zeit/next.js/invalid-href-passed`);\n                }\n                return;\n            }\n            // Prefetch is not supported in development mode because it would trigger on-demand-entries\n            if (process.env.NODE_ENV !== 'production')\n                return;\n            // @ts-ignore pathname is always defined\n            const route = toRoute(pathname);\n            this.pageLoader.prefetch(route).then(resolve, reject);\n        });\n    }\n    async fetchComponent(route) {\n        let cancelled = false;\n        const cancel = (this.clc = () => {\n            cancelled = true;\n        });\n        const Component = await this.pageLoader.loadPage(route);\n        if (cancelled) {\n            const error = new Error(`Abort fetching component for route: \"${route}\"`);\n            error.cancelled = true;\n            throw error;\n        }\n        if (cancel === this.clc) {\n            this.clc = null;\n        }\n        return Component;\n    }\n    async getInitialProps(Component, ctx) {\n        let cancelled = false;\n        const cancel = () => {\n            cancelled = true;\n        };\n        this.clc = cancel;\n        const { Component: App } = this.components['/_app'];\n        let props;\n        if (\n        // @ts-ignore workaround for dead-code elimination\n        (self.__HAS_SPR || process.env.NODE_ENV !== 'production') &&\n            Component.__NEXT_SPR) {\n            let status;\n            const { pathname } = url_1.parse(ctx.asPath || ctx.pathname);\n            props = await fetch(`/_next/data${pathname}.json`)\n                .then(res => {\n                if (!res.ok) {\n                    status = res.status;\n                    throw new Error('failed to load prerender data');\n                }\n                return res.json();\n            })\n                .catch((err) => {\n                console.error(`Failed to load data`, status, err);\n                window.location.href = pathname;\n                return new Promise(() => { });\n            });\n        }\n        else {\n            const AppTree = this._wrapApp(App);\n            ctx.AppTree = AppTree;\n            props = await utils_1.loadGetInitialProps(App, {\n                AppTree,\n                Component,\n                router: this,\n                ctx,\n            });\n        }\n        if (cancel === this.clc) {\n            this.clc = null;\n        }\n        if (cancelled) {\n            const err = new Error('Loading initial props cancelled');\n            err.cancelled = true;\n            throw err;\n        }\n        return props;\n    }\n    abortComponentLoad(as) {\n        if (this.clc) {\n            const e = new Error('Route Cancelled');\n            e.cancelled = true;\n            Router.events.emit('routeChangeError', e, as);\n            this.clc();\n            this.clc = null;\n        }\n    }\n    notify(data) {\n        this.sub(data, this.components['/_app'].Component);\n    }\n}\nRouter.events = mitt_1.default();\nexports.default = Router;\n"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACb;AAAA,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACD,uBAAsBE,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAMC,KAAK,GAAGC,OAAO,CAAC,KAAK,CAAC;AAC5B,IAAMC,MAAM,GAAGP,eAAe,CAACM,OAAO,CAAC,SAAS,CAAC,CAAC;AAClD,IAAME,OAAO,GAAGF,OAAO,CAAC,UAAU,CAAC;AACnC,IAAMG,wBAAwB,GAAGH,OAAO,CAAC,0BAA0B,CAAC;AACpE,IAAMI,eAAe,GAAGJ,OAAO,CAAC,uBAAuB,CAAC;AACxD,IAAMK,aAAa,GAAGL,OAAO,CAAC,qBAAqB,CAAC;AACpD,IAAMM,YAAY,GAAGN,OAAO,CAAC,oBAAoB,CAAC;AAClD,SAASO,OAAO,CAACC,IAAI,EAAE;EACnB,OAAOA,IAAI,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,GAAG;AACzC;AAAC,IACKC,MAAM;EACR,gBAAYC,QAAQ,EAAEC,KAAK,EAAEC,EAAE,QAA6E;IAAA;IAAA,IAAzEC,YAAY,QAAZA,YAAY;MAAEC,UAAU,QAAVA,UAAU;MAAEC,GAAG,QAAHA,GAAG;MAAEC,OAAO,QAAPA,OAAO;MAAEC,SAAS,QAATA,SAAS;MAAEC,GAAG,QAAHA,GAAG;MAAEC,YAAY,QAAZA,YAAY;IAAA;IACnG,IAAI,CAACC,UAAU,GAAG,UAACC,CAAC,EAAK;MACrB,IAAI,CAACA,CAAC,CAACC,KAAK,EAAE;QACV;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,IAAQZ,SAAQ,GAAY,KAAI,CAAxBA,QAAQ;UAAEC,MAAK,GAAK,KAAI,CAAdA,KAAK;QACvB,KAAI,CAACY,WAAW,CAAC,cAAc,EAAEtB,OAAO,CAACuB,oBAAoB,CAAC;UAAEd,QAAQ,EAARA,SAAQ;UAAEC,KAAK,EAALA;QAAM,CAAC,CAAC,EAAEV,OAAO,CAACwB,MAAM,EAAE,CAAC;QACrG;MACJ;MACA;MACA;MACA,IAAIJ,CAAC,CAACC,KAAK,CAACI,OAAO,IAAIL,CAAC,CAACC,KAAK,CAACI,OAAO,CAACC,YAAY,EAAE;QACjD;MACJ;MACA;MACA;MACA,IAAI,KAAI,CAACC,IAAI,IAAI,CAAC,KAAI,CAACA,IAAI,CAACP,CAAC,CAACC,KAAK,CAAC,EAAE;QAClC;MACJ;MACA,eAA6BD,CAAC,CAACC,KAAK;QAA5BO,GAAG,YAAHA,GAAG;QAAEjB,EAAE,YAAFA,EAAE;QAAEc,OAAO,YAAPA,OAAO;MACxB,IAAII,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;QACvC,IAAI,OAAOH,GAAG,KAAK,WAAW,IAAI,OAAOjB,EAAE,KAAK,WAAW,EAAE;UACzDqB,OAAO,CAACC,IAAI,CAAC,0HAA0H,CAAC;QAC5I;MACJ;MACA,KAAI,CAAC1B,OAAO,CAACqB,GAAG,EAAEjB,EAAE,EAAEc,OAAO,CAAC;IAClC,CAAC;IACD;IACA,IAAI,CAACS,KAAK,GAAG7B,OAAO,CAACI,QAAQ,CAAC;IAC9B;IACA,IAAI,CAAC0B,UAAU,GAAG,CAAC,CAAC;IACpB;IACA;IACA;IACA,IAAI1B,QAAQ,KAAK,SAAS,EAAE;MACxB,IAAI,CAAC0B,UAAU,CAAC,IAAI,CAACD,KAAK,CAAC,GAAG;QAAElB,SAAS,EAATA,SAAS;QAAEoB,KAAK,EAAExB,YAAY;QAAEK,GAAG,EAAHA;MAAI,CAAC;IACzE;IACA,IAAI,CAACkB,UAAU,CAAC,OAAO,CAAC,GAAG;MAAEnB,SAAS,EAAEF;IAAI,CAAC;IAC7C;IACA;IACA;IACA,IAAI,CAACuB,MAAM,GAAG7B,MAAM,CAAC6B,MAAM;IAC3B,IAAI,CAACxB,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACJ,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB;IACA;IACA,IAAI,CAAC4B,MAAM;IACP;IACAlC,YAAY,CAACmC,cAAc,CAAC9B,QAAQ,CAAC,IAAI+B,aAAa,CAACC,UAAU,GAAGhC,QAAQ,GAAGE,EAAE;IACrF,IAAI,CAAC+B,GAAG,GAAGxB,YAAY;IACvB,IAAI,CAACyB,GAAG,GAAG,IAAI;IACf,IAAI,CAACC,QAAQ,GAAG7B,OAAO;IACvB,UAAmC;MAC/B;MACA;MACA,IAAI,CAACO,WAAW,CAAC,cAAc,EAAEtB,OAAO,CAACuB,oBAAoB,CAAC;QAAEd,QAAQ,EAARA,QAAQ;QAAEC,KAAK,EAALA;MAAM,CAAC,CAAC,EAAEC,EAAE,CAAC;MACvFkC,MAAM,CAACC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC3B,UAAU,CAAC;MACpD0B,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,YAAM;QACpC;QACA;QACA,IAAIC,OAAO,CAAC1B,KAAK,EAAE;UACf,qBAA6B0B,OAAO,CAAC1B,KAAK;YAAlCO,GAAG,kBAAHA,GAAG;YAAEjB,IAAE,kBAAFA,EAAE;YAAEc,OAAO,kBAAPA,OAAO;UACxB,KAAI,CAACH,WAAW,CAAC,cAAc,EAAEM,GAAG,EAAEjB,IAAE,EAAE,eAAc,CAAC,CAAC,EAAEc,OAAO,EAAE;YAAEC,YAAY,EAAE;UAAK,CAAC,CAAC,CAAC;QACjG;MACJ,CAAC,CAAC;IACN;EACJ;EACA;EAAA;IAAA;IAAA,OAIA,gBAAOQ,KAAK,EAAEzC,GAAG,EAAE;MACf,IAAMuB,SAAS,GAAGvB,GAAG,WAAQ,IAAIA,GAAG;MACpC,IAAMuD,IAAI,GAAG,IAAI,CAACb,UAAU,CAACD,KAAK,CAAC;MACnC,IAAI,CAACc,IAAI,EAAE;QACP,MAAM,IAAIC,KAAK,4CAAqCf,KAAK,EAAG;MAChE;MACA,IAAMgB,OAAO,GAAG,eAAc,CAAC,CAAC,EAAEF,IAAI,EAAE;QAAEhC,SAAS,EAATA;MAAU,CAAC,CAAC;MACtD,IAAI,CAACmB,UAAU,CAACD,KAAK,CAAC,GAAGgB,OAAO;MAChC;MACA,IAAIhB,KAAK,KAAK,OAAO,EAAE;QACnB,IAAI,CAACiB,MAAM,CAAC,IAAI,CAAChB,UAAU,CAAC,IAAI,CAACD,KAAK,CAAC,CAAC;QACxC;MACJ;MACA,IAAIA,KAAK,KAAK,IAAI,CAACA,KAAK,EAAE;QACtB,IAAI,CAACiB,MAAM,CAACD,OAAO,CAAC;MACxB;IACJ;EAAC;IAAA;IAAA,OACD,kBAAS;MACLL,MAAM,CAACO,QAAQ,CAACC,MAAM,EAAE;IAC5B;IACA;AACJ;AACA;EAFI;IAAA;IAAA,OAGA,gBAAO;MACHR,MAAM,CAACE,OAAO,CAACO,IAAI,EAAE;IACzB;IACA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA;IAAA,OAMA,cAAK1B,GAAG,EAA0B;MAAA,IAAxBjB,EAAE,uEAAGiB,GAAG;MAAA,IAAEH,OAAO,uEAAG,CAAC,CAAC;MAC5B,OAAO,IAAI,CAAC8B,MAAM,CAAC,WAAW,EAAE3B,GAAG,EAAEjB,EAAE,EAAEc,OAAO,CAAC;IACrD;IACA;AACJ;AACA;AACA;AACA;AACA;EALI;IAAA;IAAA,OAMA,iBAAQG,GAAG,EAA0B;MAAA,IAAxBjB,EAAE,uEAAGiB,GAAG;MAAA,IAAEH,OAAO,uEAAG,CAAC,CAAC;MAC/B,OAAO,IAAI,CAAC8B,MAAM,CAAC,cAAc,EAAE3B,GAAG,EAAEjB,EAAE,EAAEc,OAAO,CAAC;IACxD;EAAC;IAAA;IAAA,OACD,gBAAO+B,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAEjC,OAAO,EAAE;MAAA;MAC/B,OAAO,aAAY,UAACkC,OAAO,EAAEC,MAAM,EAAK;QACpC;QACA,IAAI5D,OAAO,CAAC6D,gCAAgC,EAAE;UAC1CC,WAAW,CAACC,IAAI,CAAC,aAAa,CAAC;QACnC;QACA;QACA;QACA,IAAMnC,GAAG,GAAG,OAAO6B,IAAI,KAAK,QAAQ,GAAGzD,OAAO,CAACuB,oBAAoB,CAACkC,IAAI,CAAC,GAAGA,IAAI;QAChF,IAAI9C,EAAE,GAAG,OAAO+C,GAAG,KAAK,QAAQ,GAAG1D,OAAO,CAACuB,oBAAoB,CAACmC,GAAG,CAAC,GAAGA,GAAG;QAC1E;QACA;QACA,IAAI7B,OAAO,CAACC,GAAG,CAACkC,4BAA4B,EAAE;UAC1C;UACA,IAAIxB,aAAa,CAACC,UAAU,EAAE;YAC1B9B,EAAE,GAAGV,wBAAwB,CAACgE,uBAAuB,CAACtD,EAAE,CAAC;UAC7D;QACJ;QACA,MAAI,CAACuD,kBAAkB,CAACvD,EAAE,CAAC;QAC3B;QACA;QACA;QACA;QACA;QACA,IAAI,CAACc,OAAO,CAAC0C,EAAE,IAAI,MAAI,CAACC,eAAe,CAACzD,EAAE,CAAC,EAAE;UACzC,MAAI,CAAC2B,MAAM,GAAG3B,EAAE;UAChBH,MAAM,CAAC6B,MAAM,CAACgC,IAAI,CAAC,iBAAiB,EAAE1D,EAAE,CAAC;UACzC,MAAI,CAACW,WAAW,CAACkC,MAAM,EAAE5B,GAAG,EAAEjB,EAAE,CAAC;UACjC,MAAI,CAAC2D,YAAY,CAAC3D,EAAE,CAAC;UACrBH,MAAM,CAAC6B,MAAM,CAACgC,IAAI,CAAC,oBAAoB,EAAE1D,EAAE,CAAC;UAC5C,OAAOgD,OAAO,CAAC,IAAI,CAAC;QACxB;QACA,mBAAsC9D,KAAK,CAAC0E,KAAK,CAAC3C,GAAG,EAAE,IAAI,CAAC;UAApDnB,QAAQ,gBAARA,QAAQ;UAAEC,KAAK,gBAALA,KAAK;UAAE8D,QAAQ,gBAARA,QAAQ;QACjC,IAAI,CAAC/D,QAAQ,IAAI+D,QAAQ,EAAE;UACvB,IAAI3C,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;YACvC,MAAM,IAAIkB,KAAK,0CAAmCrB,GAAG,sDAAmD;UAC5G;UACA,OAAO+B,OAAO,CAAC,KAAK,CAAC;QACzB;QACA;QACA;QACA;QACA;QACA;QACA,IAAI,CAAC,MAAI,CAACc,QAAQ,CAAC9D,EAAE,CAAC,EAAE;UACpB6C,MAAM,GAAG,cAAc;QAC3B;QACA;QACA,IAAMtB,KAAK,GAAG7B,OAAO,CAACI,QAAQ,CAAC;QAC/B,uBAA4BgB,OAAO,CAA3BiD,OAAO;UAAPA,OAAO,iCAAG,KAAK;QACvB,IAAItE,YAAY,CAACmC,cAAc,CAACL,KAAK,CAAC,EAAE;UACpC,oBAAiCrC,KAAK,CAAC0E,KAAK,CAAC5D,EAAE,CAAC;YAA9BgE,UAAU,iBAApBlE,QAAQ;UAChB,IAAMmE,EAAE,GAAGzE,aAAa,CAAC0E,aAAa,CAAC3C,KAAK,CAAC;UAC7C,IAAM4C,UAAU,GAAG5E,eAAe,CAAC6E,eAAe,CAACH,EAAE,CAAC,CAACD,UAAU,CAAC;UAClE,IAAI,CAACG,UAAU,EAAE;YACb9C,OAAO,CAACgD,KAAK,CAAC,kIAAkI,CAAC;YACjJ,OAAOrB,OAAO,CAAC,KAAK,CAAC;UACzB;UACA;UACA,eAAcjD,KAAK,EAAEoE,UAAU,CAAC;QACpC;QACAtE,MAAM,CAAC6B,MAAM,CAACgC,IAAI,CAAC,kBAAkB,EAAE1D,EAAE,CAAC;QAC1C;QACA;QACA,MAAI,CAACsE,YAAY,CAAC/C,KAAK,EAAEzB,QAAQ,EAAEC,KAAK,EAAEC,EAAE,EAAE+D,OAAO,CAAC,CAACQ,IAAI,CAAC,UAAAC,SAAS,EAAI;UACrE,IAAQH,KAAK,GAAKG,SAAS,CAAnBH,KAAK;UACb,IAAIA,KAAK,IAAIA,KAAK,CAACI,SAAS,EAAE;YAC1B,OAAOzB,OAAO,CAAC,KAAK,CAAC;UACzB;UACAnD,MAAM,CAAC6B,MAAM,CAACgC,IAAI,CAAC,qBAAqB,EAAE1D,EAAE,CAAC;UAC7C,MAAI,CAACW,WAAW,CAACkC,MAAM,EAAE5B,GAAG,EAAEjB,EAAE,EAAEc,OAAO,CAAC;UAC1C,IAAM4D,IAAI,GAAGxC,MAAM,CAACO,QAAQ,CAACiC,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;UAC9C,IAAIzD,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;YACvC,IAAMwD,OAAO,GAAG,MAAI,CAACpD,UAAU,CAAC,OAAO,CAAC,CAACnB,SAAS;YAClD6B,MAAM,CAAC2C,IAAI,CAACC,aAAa,GACrBF,OAAO,CAACG,eAAe,KAAKH,OAAO,CAACI,mBAAmB,IACnD,CAACR,SAAS,CAACnE,SAAS,CAAC0E,eAAe;UAChD;UACA;UACA,MAAI,CAACE,GAAG,CAAC1D,KAAK,EAAEzB,QAAQ,EAAEC,KAAK,EAAEC,EAAE,EAAE,eAAc,CAAC,CAAC,EAAEwE,SAAS,EAAE;YAAEE,IAAI,EAAJA;UAAK,CAAC,CAAC,CAAC;UAC5E,IAAIL,KAAK,EAAE;YACPxE,MAAM,CAAC6B,MAAM,CAACgC,IAAI,CAAC,kBAAkB,EAAEW,KAAK,EAAErE,EAAE,CAAC;YACjD,MAAMqE,KAAK;UACf;UACAxE,MAAM,CAAC6B,MAAM,CAACgC,IAAI,CAAC,qBAAqB,EAAE1D,EAAE,CAAC;UAC7C,OAAOgD,OAAO,CAAC,IAAI,CAAC;QACxB,CAAC,EAAEC,MAAM,CAAC;MACd,CAAC,CAAC;IACN;EAAC;IAAA;IAAA,OACD,qBAAYJ,MAAM,EAAE5B,GAAG,EAAEjB,EAAE,EAAgB;MAAA,IAAdc,OAAO,uEAAG,CAAC,CAAC;MACrC,IAAII,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;QACvC,IAAI,OAAOc,MAAM,CAACE,OAAO,KAAK,WAAW,EAAE;UACvCf,OAAO,CAACgD,KAAK,6CAA6C;UAC1D;QACJ;QACA;QACA,IAAI,OAAOnC,MAAM,CAACE,OAAO,CAACS,MAAM,CAAC,KAAK,WAAW,EAAE;UAC/CxB,OAAO,CAACgD,KAAK,mCAA4BxB,MAAM,uBAAoB;UACnE;QACJ;MACJ;MACA,IAAIA,MAAM,KAAK,WAAW,IAAIxD,OAAO,CAACwB,MAAM,EAAE,KAAKb,EAAE,EAAE;QACnD;QACAkC,MAAM,CAACE,OAAO,CAACS,MAAM,CAAC,CAAC;UAAE5B,GAAG,EAAHA,GAAG;UAAEjB,EAAE,EAAFA,EAAE;UAAEc,OAAO,EAAPA;QAAQ,CAAC,EAAE,IAAI,EAAEd,EAAE,CAAC;MAC1D;IACJ;EAAC;IAAA;IAAA,OACD,sBAAauB,KAAK,EAAEzB,QAAQ,EAAEC,KAAK,EAAEC,EAAE,EAAmB;MAAA;MAAA,IAAjB+D,OAAO,uEAAG,KAAK;MACpD,IAAMmB,eAAe,GAAG,IAAI,CAAC1D,UAAU,CAACD,KAAK,CAAC;MAC9C;MACA;MACA,IAAIwC,OAAO,IAAImB,eAAe,IAAI,IAAI,CAAC3D,KAAK,KAAKA,KAAK,EAAE;QACpD,OAAO,SAAQyB,OAAO,CAACkC,eAAe,CAAC;MAC3C;MACA,OAAO,aAAY,UAAClC,OAAO,EAAEC,MAAM,EAAK;QACpC,IAAIiC,eAAe,EAAE;UACjB,OAAOlC,OAAO,CAACkC,eAAe,CAAC;QACnC;QACA,MAAI,CAACC,cAAc,CAAC5D,KAAK,CAAC,CAACgD,IAAI,CAAC,UAAAlE,SAAS;UAAA,OAAI2C,OAAO,CAAC;YAAE3C,SAAS,EAATA;UAAU,CAAC,CAAC;QAAA,GAAE4C,MAAM,CAAC;MAChF,CAAC,CAAC,CACGsB,IAAI,CAAC,UAACC,SAAS,EAAK;QACrB,IAAQnE,SAAS,GAAKmE,SAAS,CAAvBnE,SAAS;QACjB,IAAIa,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;UACvC,eAA+BjC,OAAO,CAAC,UAAU,CAAC;YAA1CiG,kBAAkB,YAAlBA,kBAAkB;UAC1B,IAAI,CAACA,kBAAkB,CAAC/E,SAAS,CAAC,EAAE;YAChC,MAAM,IAAIiC,KAAK,kEAA0DxC,QAAQ,QAAI;UACzF;QACJ;QACA,OAAO,aAAY,UAACkD,OAAO,EAAEC,MAAM,EAAK;UACpC;UACA,MAAI,CAAC8B,eAAe,CAAC1E,SAAS,EAAE;YAC5BP,QAAQ,EAARA,QAAQ;YACRC,KAAK,EAALA,KAAK;YACL4B,MAAM,EAAE3B;UACZ,CAAC,CAAC,CAACuE,IAAI,CAAC,UAAA9C,KAAK,EAAI;YACb+C,SAAS,CAAC/C,KAAK,GAAGA,KAAK;YACvB,MAAI,CAACD,UAAU,CAACD,KAAK,CAAC,GAAGiD,SAAS;YAClCxB,OAAO,CAACwB,SAAS,CAAC;UACtB,CAAC,EAAEvB,MAAM,CAAC;QACd,CAAC,CAAC;MACN,CAAC,CAAC,SACQ,CAAC,UAAA3C,GAAG,EAAI;QACd,OAAO,aAAY,UAAA0C,OAAO,EAAI;UAC1B,IAAI1C,GAAG,CAAC+E,IAAI,KAAK,iBAAiB,EAAE;YAChC;YACA;YACA;YACA;YACA;YACAnD,MAAM,CAACO,QAAQ,CAAC6C,IAAI,GAAGtF,EAAE;YACzB;YACA;YACAM,GAAG,CAACmE,SAAS,GAAG,IAAI;YACpB;YACA,OAAOzB,OAAO,CAAC;cAAEqB,KAAK,EAAE/D;YAAI,CAAC,CAAC;UAClC;UACA,IAAIA,GAAG,CAACmE,SAAS,EAAE;YACf;YACA,OAAOzB,OAAO,CAAC;cAAEqB,KAAK,EAAE/D;YAAI,CAAC,CAAC;UAClC;UACA0C,OAAO,CAAC,MAAI,CAACmC,cAAc,CAAC,SAAS,CAAC,CAACZ,IAAI,CAAC,UAAAlE,SAAS,EAAI;YACrD,IAAMmE,SAAS,GAAG;cAAEnE,SAAS,EAATA,SAAS;cAAEC,GAAG,EAAHA;YAAI,CAAC;YACpC,OAAO,aAAY,UAAA0C,OAAO,EAAI;cAC1B,MAAI,CAAC+B,eAAe,CAAC1E,SAAS,EAAE;gBAC5BC,GAAG,EAAHA,GAAG;gBACHR,QAAQ,EAARA,QAAQ;gBACRC,KAAK,EAALA;cACJ,CAAC,CAAC,CAACwE,IAAI,CAAC,UAAA9C,KAAK,EAAI;gBACb+C,SAAS,CAAC/C,KAAK,GAAGA,KAAK;gBACvB+C,SAAS,CAACH,KAAK,GAAG/D,GAAG;gBACrB0C,OAAO,CAACwB,SAAS,CAAC;cACtB,CAAC,EAAE,UAAAe,MAAM,EAAI;gBACTlE,OAAO,CAACgD,KAAK,CAAC,yCAAyC,EAAEkB,MAAM,CAAC;gBAChEf,SAAS,CAACH,KAAK,GAAG/D,GAAG;gBACrBkE,SAAS,CAAC/C,KAAK,GAAG,CAAC,CAAC;gBACpBuB,OAAO,CAACwB,SAAS,CAAC;cACtB,CAAC,CAAC;YACN,CAAC,CAAC;UACN,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;MACN,CAAC,CAAC;IACN;EAAC;IAAA;IAAA,OACD,aAAIjD,KAAK,EAAEzB,QAAQ,EAAEC,KAAK,EAAEC,EAAE,EAAEqC,IAAI,EAAE;MAClC,IAAI,CAACd,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACzB,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAACC,KAAK,GAAGA,KAAK;MAClB,IAAI,CAAC4B,MAAM,GAAG3B,EAAE;MAChB,IAAI,CAACwC,MAAM,CAACH,IAAI,CAAC;IACrB;IACA;AACJ;AACA;AACA;EAHI;IAAA;IAAA,OAIA,wBAAemD,EAAE,EAAE;MACf,IAAI,CAACxE,IAAI,GAAGwE,EAAE;IAClB;EAAC;IAAA;IAAA,OACD,yBAAgBxF,EAAE,EAAE;MAChB,IAAI,CAAC,IAAI,CAAC2B,MAAM,EACZ,OAAO,KAAK;MAChB,yBAAgC,IAAI,CAACA,MAAM,CAAC8D,KAAK,CAAC,GAAG,CAAC;QAAA;QAA/CC,YAAY;QAAEC,OAAO;MAC5B,gBAAgC3F,EAAE,CAACyF,KAAK,CAAC,GAAG,CAAC;QAAA;QAAtCG,YAAY;QAAEC,OAAO;MAC5B;MACA,IAAIA,OAAO,IAAIH,YAAY,KAAKE,YAAY,IAAID,OAAO,KAAKE,OAAO,EAAE;QACjE,OAAO,IAAI;MACf;MACA;MACA,IAAIH,YAAY,KAAKE,YAAY,EAAE;QAC/B,OAAO,KAAK;MAChB;MACA;MACA;MACA;MACA;MACA,OAAOD,OAAO,KAAKE,OAAO;IAC9B;EAAC;IAAA;IAAA,OACD,sBAAa7F,EAAE,EAAE;MACb,iBAAiBA,EAAE,CAACyF,KAAK,CAAC,GAAG,CAAC;QAAA;QAArBf,IAAI;MACb;MACA,IAAIA,IAAI,KAAK,EAAE,EAAE;QACbxC,MAAM,CAAC4D,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;QACrB;MACJ;MACA;MACA,IAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAc,CAACvB,IAAI,CAAC;MAC1C,IAAIqB,IAAI,EAAE;QACNA,IAAI,CAACG,cAAc,EAAE;QACrB;MACJ;MACA;MACA;MACA,IAAMC,MAAM,GAAGH,QAAQ,CAACI,iBAAiB,CAAC1B,IAAI,CAAC,CAAC,CAAC,CAAC;MAClD,IAAIyB,MAAM,EAAE;QACRA,MAAM,CAACD,cAAc,EAAE;MAC3B;IACJ;EAAC;IAAA;IAAA,OACD,kBAASvE,MAAM,EAAE;MACb,OAAO,IAAI,CAACA,MAAM,KAAKA,MAAM;IACjC;IACA;AACJ;AACA;AACA;AACA;EAJI;IAAA;IAAA,OAKA,kBAASV,GAAG,EAAE;MAAA;MACV,OAAO,aAAY,UAAC+B,OAAO,EAAEC,MAAM,EAAK;QACpC,oBAA+B/D,KAAK,CAAC0E,KAAK,CAAC3C,GAAG,CAAC;UAAvCnB,QAAQ,iBAARA,QAAQ;UAAE+D,QAAQ,iBAARA,QAAQ;QAC1B,IAAI,CAAC/D,QAAQ,IAAI+D,QAAQ,EAAE;UACvB,IAAI3C,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;YACvC,MAAM,IAAIkB,KAAK,0CAAmCrB,GAAG,sDAAmD;UAC5G;UACA;QACJ;QACA;QACA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EACrC;QACJ;QACA,IAAMG,KAAK,GAAG7B,OAAO,CAACI,QAAQ,CAAC;QAC/B,MAAI,CAACI,UAAU,CAACmG,QAAQ,CAAC9E,KAAK,CAAC,CAACgD,IAAI,CAACvB,OAAO,EAAEC,MAAM,CAAC;MACzD,CAAC,CAAC;IACN;EAAC;IAAA;IAAA;MAAA,iFACD,iBAAqB1B,KAAK;QAAA;QAAA;UAAA;YAAA;cAClBkD,SAAS,GAAG,KAAK;cACf6B,MAAM,GAAI,IAAI,CAACtE,GAAG,GAAG,YAAM;gBAC7ByC,SAAS,GAAG,IAAI;cACpB,CAAC;cAAA;cAAA,OACuB,IAAI,CAACvE,UAAU,CAACqG,QAAQ,CAAChF,KAAK,CAAC;YAAA;cAAjDlB,SAAS;cAAA,KACXoE,SAAS;gBAAA;gBAAA;cAAA;cACHJ,KAAK,GAAG,IAAI/B,KAAK,iDAAyCf,KAAK,QAAI;cACzE8C,KAAK,CAACI,SAAS,GAAG,IAAI;cAAC,MACjBJ,KAAK;YAAA;cAEf,IAAIiC,MAAM,KAAK,IAAI,CAACtE,GAAG,EAAE;gBACrB,IAAI,CAACA,GAAG,GAAG,IAAI;cACnB;cAAC,iCACM3B,SAAS;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CACnB;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,kFACD,kBAAsBA,SAAS,EAAEmG,GAAG;QAAA;QAAA;UAAA;YAAA;cAC5B/B,SAAS,GAAG,KAAK;cACf6B,MAAM,GAAG,SAATA,MAAM,GAAS;gBACjB7B,SAAS,GAAG,IAAI;cACpB,CAAC;cACD,IAAI,CAACzC,GAAG,GAAGsE,MAAM;cACEnG,GAAG,GAAK,IAAI,CAACqB,UAAU,CAAC,OAAO,CAAC,CAA3CnB,SAAS;cAAA;cAGjB;cACA,CAACoG,IAAI,CAACC,SAAS,IAAIxF,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,KACpDf,SAAS,CAACsG,UAAU;gBAAA;gBAAA;cAAA;cAAA,gBAECzH,KAAK,CAAC0E,KAAK,CAAC4C,GAAG,CAAC7E,MAAM,IAAI6E,GAAG,CAAC1G,QAAQ,CAAC,EAApDA,QAAQ,iBAARA,QAAQ;cAAA;cAAA,OACF8G,KAAK,sBAAe9G,QAAQ,WAAQ,CAC7CyE,IAAI,CAAC,UAAAsC,GAAG,EAAI;gBACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;kBACTC,MAAM,GAAGF,GAAG,CAACE,MAAM;kBACnB,MAAM,IAAIzE,KAAK,CAAC,+BAA+B,CAAC;gBACpD;gBACA,OAAOuE,GAAG,CAACG,IAAI,EAAE;cACrB,CAAC,CAAC,SACQ,CAAC,UAAC1G,GAAG,EAAK;gBAChBe,OAAO,CAACgD,KAAK,wBAAwB0C,MAAM,EAAEzG,GAAG,CAAC;gBACjD4B,MAAM,CAACO,QAAQ,CAAC6C,IAAI,GAAGxF,QAAQ;gBAC/B,OAAO,aAAY,YAAM,CAAE,CAAC,CAAC;cACjC,CAAC,CAAC;YAAA;cAZF2B,KAAK;cAAA;cAAA;YAAA;cAeCwF,OAAO,GAAG,IAAI,CAAChF,QAAQ,CAAC9B,GAAG,CAAC;cAClCqG,GAAG,CAACS,OAAO,GAAGA,OAAO;cAAC;cAAA,OACR5H,OAAO,CAAC6H,mBAAmB,CAAC/G,GAAG,EAAE;gBAC3C8G,OAAO,EAAPA,OAAO;gBACP5G,SAAS,EAATA,SAAS;gBACT8G,MAAM,EAAE,IAAI;gBACZX,GAAG,EAAHA;cACJ,CAAC,CAAC;YAAA;cALF/E,KAAK;YAAA;cAOT,IAAI6E,MAAM,KAAK,IAAI,CAACtE,GAAG,EAAE;gBACrB,IAAI,CAACA,GAAG,GAAG,IAAI;cACnB;cAAC,KACGyC,SAAS;gBAAA;gBAAA;cAAA;cACHnE,GAAG,GAAG,IAAIgC,KAAK,CAAC,iCAAiC,CAAC;cACxDhC,GAAG,CAACmE,SAAS,GAAG,IAAI;cAAC,MACfnE,GAAG;YAAA;cAAA,kCAENmB,KAAK;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CACf;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA,OACD,4BAAmBzB,EAAE,EAAE;MACnB,IAAI,IAAI,CAACgC,GAAG,EAAE;QACV,IAAMvB,CAAC,GAAG,IAAI6B,KAAK,CAAC,iBAAiB,CAAC;QACtC7B,CAAC,CAACgE,SAAS,GAAG,IAAI;QAClB5E,MAAM,CAAC6B,MAAM,CAACgC,IAAI,CAAC,kBAAkB,EAAEjD,CAAC,EAAET,EAAE,CAAC;QAC7C,IAAI,CAACgC,GAAG,EAAE;QACV,IAAI,CAACA,GAAG,GAAG,IAAI;MACnB;IACJ;EAAC;IAAA;IAAA,OACD,gBAAOK,IAAI,EAAE;MACT,IAAI,CAACN,GAAG,CAACM,IAAI,EAAE,IAAI,CAACb,UAAU,CAAC,OAAO,CAAC,CAACnB,SAAS,CAAC;IACtD;EAAC;IAAA;IAAA,OA7XD,kCAAgCY,GAAG,EAAE;MACjC,OAAO3B,wBAAwB,CAACgE,uBAAuB,CAACrC,GAAG,CAAC;IAChE;EAAC;EAAA;AAAA;AA6XLpB,MAAM,CAAC6B,MAAM,GAAGtC,MAAM,WAAQ,EAAE;AAChCJ,OAAO,WAAQ,GAAGa,MAAM"},"metadata":{},"sourceType":"script"}
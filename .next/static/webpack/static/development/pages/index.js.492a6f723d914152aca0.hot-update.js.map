{"version":3,"file":"static/webpack/static/development/pages/index.js.492a6f723d914152aca0.hot-update.js","sources":["webpack:///./components/Editor/Editor.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\nimport Editor, { Monaco } from \"@monaco-editor/react\";\n\nconst EditorComponent = () =>{\n\n    const editorRef:any = useRef(null);\n\n    function handleEditorDidMount(editor: any, monaco: Monaco) {\n      // here is the editor instance\n      // you can store it in `useRef` for further usage\n      console.log(\"hhh\", editor, monaco);\n      editorRef.current = editor;\n    }\n\n    function handleEditorChange(value:any, event:any) {\n        // here is the current value\n        console.log(\"here is the current model value:\", value);\n    }\n\n    function showValue() {\n        alert(editorRef.current.getValue());\n      }\n\n    return(\n        <div>\n            <button onClick={showValue}>Show value</button>\n            <Editor\n            height=\"80vh\"\n            width=\"60vw\"\n            defaultLanguage=\"typescript\"\n            defaultValue=\"// Enter playWright test scripts!\"\n            onMount={handleEditorDidMount}\n            onChange={handleEditorChange}\n            />\n      </div>\n    )\n\n}\nexport default EditorComponent;"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;;;;A","sourceRoot":""}